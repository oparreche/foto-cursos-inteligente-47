
-- Create AI settings table
CREATE TABLE IF NOT EXISTS public.ai_settings (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    provider TEXT,
    model TEXT,
    api_key TEXT,
    last_updated TIMESTAMP WITH TIME ZONE DEFAULT now(),
    updated_by UUID REFERENCES auth.users(id)
);

-- Add a row level security policy to restrict access
ALTER TABLE public.ai_settings ENABLE ROW LEVEL SECURITY;

-- Only allow super_admin role to update the settings
CREATE POLICY ai_settings_super_admin_all ON public.ai_settings
    USING (public.has_role(auth.uid(), 'super_admin'::user_role));

-- Allow admins to read settings
CREATE POLICY ai_settings_admin_read ON public.ai_settings 
    FOR SELECT
    USING (public.has_role(auth.uid(), 'admin'::user_role) OR 
           public.has_role(auth.uid(), 'super_admin'::user_role));

-- Insert a default empty row
INSERT INTO public.ai_settings (id, provider, model, api_key)
VALUES (1, NULL, NULL, NULL)
ON CONFLICT (id) DO NOTHING;
